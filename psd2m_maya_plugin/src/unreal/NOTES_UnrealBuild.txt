---------- ---------- ---------- ----------
12 May 2022
Unreal 4.27.2

BUILD PROCESS:
- Access github
  See https://www.unrealengine.com/en-US/ue4-on-github

- Download source
  https://github.com/EpicGames/UnrealEngine/releases/tag/4.27.2-release

- Download pre-requisites
  See https://docs.unrealengine.com/4.27/en-US/ProgrammingAndScripting/ProgrammingWithCPP/DownloadingSourceCode/
  See https://docs.unrealengine.com/4.27/en-US/ProductionPipelines/DevelopmentSetup/BuildingUnrealEngine/
  From command prompt, run Setup.bat

- Generate project files
  from command prompt, run GenerateProjectFiles.bat
  
  Maybe do this from a regular command prompt, not a Visual Studio command prompt,
  it seems to rely on some variables or paths which are overriden by vcvars.bat

- Ensure hardware setup
  Unreal Engine v4.27.2 with 24 cores, build may require 128 GB or more ...
  so, *ENABLE PAGING* file with more than 16GB

- Ensure project settings
  To solve "command line is too long to fit in debug record" error ...
  Update files   
    \Engine\Source\Editor\UnrealEd\UnrealEd.Build.cs
    \Engine\Source\Programs\ShaderCompileWorker\ShaderCompileWorker.Build.cs
  ... maybe others
  Add "bLegacyPublicIncludePaths = false;" to first line of method
    public xxxx(ReadOnlyTargetRules Target) : base(Target)
  where xxxx is UnrealEd, ShaderCompilerWorker, etc

- Build
  devenv UE4.sln /Build "Development Editor|Win64" 

- Disable the launcher window [optional]
  >> Actually doesn't work, apparently no way to run the editor without a project loaded
  See https://www.froyok.fr/blog/2015-01-ue4-my-engine-modifications/
  comment the call to the launcher in EditorEngine.cpp in the top of the function UEditorEngine::InitEditor()
  in folder \Engine\Source\Editor\UnrealEd\Private
    /*
    // Specify "-ForceLauncher" on the command-line to always open the launcher, even in unusual cases.  This is useful for debugging the Launcher startup.
    const bool bForceLauncherToOpen = FParse::Param(FCommandLine::Get(), TEXT("ForceLauncher"));

    if ( bForceLauncherToOpen ||
        ( !FEngineBuildSettings::IsInternalBuild() &&
        !FEngineBuildSettings::IsPerforceBuild() &&
        !FPlatformMisc::IsDebuggerPresent() &&  // Don't spawn launcher while running in the Visual Studio debugger by default
        !FApp::IsBenchmarking() &&
        !GIsDemoMode &&
        !IsRunningCommandlet() &&
        !FPlatformProcess::IsApplicationRunning(TEXT("EpicGamesLauncher")) &&
        !FPlatformProcess::IsApplicationRunning(TEXT("EpicGamesLauncher-Mac-Shipping"))
        ))
    {
        IDesktopPlatform* DesktopPlatform = FDesktopPlatformModule::Get();
        if ( DesktopPlatform != NULL )
        {
            FOpenLauncherOptions SilentOpen;
            DesktopPlatform->OpenLauncher(SilentOpen);
        }
    }
    */

- Check plugin settings
  Create a test project to check its Visual Studio settings ...
  In Unreal Engine, from Edit->Plugins->New Plugin->Editor Standalone Window
  Check file [ProjectRoot]\Intermediate\Build\Win64\UE4Editor\Development\[ProjectName]\Definitions.[ProjectName].h
  Check file *.obj.response
  Check file *.lib.response
  Check file *.dll.response
  Update plugin source unrealEditorPluginFlags.h
  Update plugin include directors, linker directories, and libs
  
- Copy deployment
  from \psd2m_maya_plugin\src\unreal\deploy
  to \UNREAL\Engine\Plugins\Editor\PSDtoUnreal

- Set build ID to match the current Unreal build version
  find any UE4Editor.modules file from any editor plugin,
  copy from "BuildId" value to UE4Engine.modules in local build
  
- Copy dependencies
  Should be handled by post-build script on psd2m_maya_plugin in RelWithDebInfo_Unreal mode,
  but check it's still working with current paths
- Run python script \psd2m_maya_plugin\src\unreal\check_depends.py
  to ensure the dll can load and the OpenPlugin() function can be called successfully
  
- Windows.h
  if this must be included, include after any Unreal headers, to avoid conflict
  
- Debugging
  Copy Unreal\Engine\Extras\VisualStudioDebugging\ue4.natvis to visual studio 2017
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Packages\Debugger\Visualizers
  \Documents\Visual Studio 2017\Visualizers
  see https://forums.unrealengine.com/t/how-to-watch-value-of-fstring-on-debug-mode/287743



---------- ---------- ---------- ----------
22 Jun 2021
Unreal 4.26.1

PROBLEM: Build error, "command line is too long to fit in debug record"
Edit file \Engine\Source\Programs\ShaderCompileWorker\ShaderCompileWorker.Build.cs
Add "bLegacyPublicIncludePaths = false;" as first line of method public ShaderCompileWorker(ReadOnlyTargetRules Target) : base(Target)

BUILD PROCESS:
- Create reference test code using Unreal build system, by creating C++ project, from Unreal Editor->File->New Project...
- Create reference editor plugin, by first addind a C++ class to the project, from Unreal Editor->File->New C++ Class...
  then create the plugin, from Unreal Editor->Edit->Plugins->New Plugin button in lower right->Editor Toolbar Button template
  ensure "Is Engine Plugin" is checked
- Copy manifest BuildID,
  from "BuildId" value in UE4Editor.modules file, from any editor plugin in the Unreal build,
  to UE4Engine.modules in local build
- Copy preprocessor defines from:
    [ProjectRoot]\Intermediate\Build\Win64\UE4Editor\Development\[ProjectName]\Definitions.[ProjectName].h
  to local file:
    psdToUnrealCommands.h
- For each class or type needed, search the Unreal source for the type,
  add the header used to unrealmain.cpp or psdToUnrealCommands.h, then...
- For each complaint of header not found, search for header file under source code directory,
  add the include directory to project setting, based from $(UnrealEngine)
- Be careful about windows.h, as of 4.26.2 (or recently), Unreal includes windows definitions internally,
  and produces compile conflicts with this header
- Be careful about linkage.  Had problem where FName::IsValid() returned different value
  in plugin vs in core, because incorrectly linked against ShaderCompilerWorker, with different name pool
- Copy Unreal dependencies from \psd2m_maya_plugin\src\unreal\deploy
  to Unreal \Engine\Plugins\Editor\PSDtoUnreal\Binaries\Win64
- Copy Qt dependencies from \psd2m_maya_plugin\deps
  to Unreal \Engine\Plugins\Editor\PSDtoUnreal\Binaries\Win64
- Run python script \psd2m_maya_plugin\src\unreal\check_depends.py
  to ensure the dll can load and the OpenPlugin() function can be called successfully
- Set executable command in project settings to ..\..\..\unreal\Engine\Binaries\Win64\UE4Editor.exe
- Build in mode RelWithDebInfo_Standalone|x64



---------- ---------- ---------- ----------
02 Apr 2020
Unreal 4.24

PROBLEM: Build without Unreal build system
Requires manual configuration of include paths, lengthly list
- Look at .response files created during build for the /I commands indicating the paths
- OR ... workflow is to compile, look at header error, find the header, update the vcxproj, and repeat
  which produces very clean list of include directories

- Tutorial video
  Youtube: "C++ Extending the Editor | Live Training | Unreal Engine", https://www.youtube.com/watch?v=zg_VstBxDi8


