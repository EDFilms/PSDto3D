//----------------------------------------------------------------------------------------------
//
//  @file LicensingWidget.h
//  @author Michaelson Britt
//  @date 05-12-2019
//
//  @section DESCRIPTION
//
//----------------------------------------------------------------------------------------------

#ifndef LICENSINGWIDGET_H
#define LICENSINGWIDGET_H

#if defined PSDTO3D_MAYA_VERSION
#include <maya/MTypes.h>
#else
#include "mayaStub.h"
#endif
#include "psd_reader/psdReader.h"
#include "../IControllerUpdate.h"

#include "../parameters.h"
#include "interface/ui_wrapper.h"
#if defined PSDTO3D_MAYA_VERSION
#endif
#include <vector>
// autogenerated headers
#include "ui_licensingWidget.h"

class QListWidgetItem; // forward declaration

// Forward declaration.  Implemented in ECDSA serial number library
int ECDSA_Verify( const char* first_name, const char* last_name, const char* email, const char* license_key );

namespace psd_to_3d
{
	//----------------------------------------------------------------------------------------------
	class LicensingWidget : public QMainWindow
	{
		Q_OBJECT
	public:

		LicensingWidget(QMainWindow *parent = nullptr);
		~LicensingWidget();

        class LicensingCallback {
        public:
            virtual void OnActivateLicense( LicensingParameters& data ) = 0;
        };
        void SetCallback( LicensingCallback* callback );

		LicensingParameters& GetParameters();
		void AddController(IPluginController* controller);
		void RemoveController(IPluginController* controller);

		void ClearUI(); // clear all fields

        void Fetch(); // read internal data values from prefs, set to UI
        void Store(); // write internal data values to prefs


	public slots:
		void OnActivateBtn(bool checked);
		void OnCancelBtn(bool checked);
		void SetUserInfoFirstName(QString);
		void SetUserInfoLastName(QString);
		void SetUserInfoEmail(QString);
		void SetLicenseKey(QString);

	private:
        LicensingCallback* Callback;
		LicensingParameters Data;
        //LicensingParameters DataIntermediate; // becomes final when activate button pressed
		Ui::LicensingWidget *Ui;
		std::vector<IPluginController*> Controllers;
		std::map<QListWidgetItem*, std::string> WidgetMap;

		void UpdateLocalization(); // translate all UI strings
		void UpdateUi();
		void UpdatePanels();
		void UpdateButtons() const;
	};
}
#endif // LICENSINGWIDGET_H
